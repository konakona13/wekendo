<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="YYY-Mapper">
<cache/>

<!-- 상품번호 만들기  -->
<select id="getGoodsNum" resultType="String">
	SELECT GOODS_NUM_SEQ.nextval
	FROM DUAL
</select>

<!-- 상품등록 -->

<insert id="placeRegist" parameterType="Model.DTO.YYYDTO.Goods">
   INSERT INTO GOODS
   (GOODS_NUM, MAP_L_NUM, MAP_M_NUM, MAP_S_NUM, THEME_L_NUM, THEME_M_NUM, THEME_S_NUM, 
   GOODS_NAME, GOODS_PRICE, GOODS_DETAIL, GOODS_DANGER, GOODS_STATUS, GOODS_STOCK, COMPANY_NUM, REG_DATE)
   VALUES (#{goodsNum}||#{goodsNum2}, #{mapLNum}, #{mapMNum}, #{mapSNum}, #{themeLNum}, #{themeMNum},
   #{themeSNum}, #{goodsName}, #{goodsPrice}, #{goodsDetail}, #{goodsDanger}, #{goodsStatus},
   #{goodsStock}, #{companyNum}, sysdate)
</insert>


<!-- 이미지등록 -->

<insert id="setGoodsImg" parameterType="Model.DTO.YYYDTO.GoodsImg">
	INSERT INTO GOODS_IMG
   (GOODS_NUM, COMPANY_NUM, MAP_L_NUM, MAP_M_NUM, MAP_S_NUM, THEME_M_NUM, THEME_L_NUM, THEME_S_NUM, GOODS_IMG_NAME, GOODS_IMG_NUM, GOODS_IMG_KIND)
   VALUES (#{goodsNum}, #{companyNum}, #{mapLNum}, #{mapMNum}, #{mapSNum}, #{themeLNum}, #{themeMNum},
   #{themeSNum}, #{goodsImgName}, GOODS_IMG_NUM_SEQ.nextval, #{goodsImgKind})
</insert>



<resultMap type="Model.DTO.YYYDTO.Goods" id="goods">
   <id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
   <id column="GOODS_NUM2" jdbcType="VARCHAR" property="goodsNum2"/>
   <result column="MAP_L_NUM" jdbcType="VARCHAR" property="mapLNum"/>
   <result column="MAP_M_NUM" jdbcType="VARCHAR" property="mapMNum"/>
   <result column="MAP_S_NUM" jdbcType="VARCHAR" property="mapSNum"/>
   <result column="THEME_L_NUM" jdbcType="VARCHAR" property="themeLNum"/>
   <result column="THEME_M_NUM" jdbcType="VARCHAR" property="themeMNum"/>
   <result column="THEME_S_NUM" jdbcType="VARCHAR" property="themeSNum"/>
   <result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName"/>
   <result column="GOODS_PRICE" jdbcType="BIGINT" property="goodsPrice"/>
   <result column="GOODS_DETAIL" jdbcType="VARCHAR" property="goodsDetail"/>
   <result column="GOODS_DANGER" jdbcType="VARCHAR" property="goodsDanger"/>
   <result column="GOODS_STATUS" jdbcType="VARCHAR" property="goodsStatus"/>
   <result column="GOODS_STOCK" jdbcType="BIGINT" property="goodsStock"/>
   <result column="COMPANY_NUM" jdbcType="VARCHAR" property="companyNum"/>
   <result column="REG_DATE" jdbcType="TIMESTAMP" />   
</resultMap>


<!-- 상품번호 가져오기 -->

<select id="getMaxNum" parameterType="String">
      SELECT max(goods_num)
      FROM GOODS g,company c
      where g.company_num = c.company_num
      and c.company_num = #{comNum}
</select>

<!-- 상품리스트 -->

<sql id="goodsAllSelect">
	GOODS_NUM, MAP_L_NUM, MAP_M_NUM, MAP_S_NUM, 
    THEME_L_NUM, THEME_M_NUM, THEME_S_NUM, 
    GOODS_NAME, GOODS_PRICE, GOODS_DETAIL, GOODS_DANGER, GOODS_STATUS, 
    GOODS_STOCK, COMPANY_NUM, REG_DATE
</sql>



<!-- 목록에 회사명 가져오기 위해 -->

<resultMap type="Model.DTO.YYYDTO.GoodsList" id="goodsList">
		<id column="COMPANY_NUM" jdbcType="VARCHAR" property="companyNum" />
		<result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName" />
		<result column="COMPANY_KIND" jdbcType="VARCHAR" property="companyKind" />
		<result column="COMPANY_STATUS" jdbcType="VARCHAR" property="companyStatus" />
		<result column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum" />
		<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
		<result column="REG_DATE" jdbcType="TIMESTAMP" property="regDate" />
		<result column="GOODS_STATUS" jdbcType="VARCHAR" property="goodsStatus" />
</resultMap>

<select id="getGoodsAll" resultMap="goodsList">
	  	SELECT c.COMPANY_NUM, c.COMPANY_NAME, c.company_kind , G.GOODS_NUM, G.GOODS_NAME, G.REG_DATE, G.GOODS_STATUS	  		
		FROM COMPANY c JOIN GOODS g
		ON c.COMPANY_NUM = g.COMPANY_NUM
</select>

<select id="getGoodsList" resultType="String" resultMap="goodsList">
	  	SELECT c.COMPANY_NUM, c.COMPANY_NAME, c.company_kind , c.COMPANY_STATUS,
	  				G.GOODS_NUM, G.GOODS_NAME, G.REG_DATE, G.GOODS_STATUS	  		
		FROM COMPANY c JOIN GOODS g
		ON c.COMPANY_NUM = g.COMPANY_NUM
		WHERE c.COMPANY_NUM = #{companyNum}
        ORDER BY REG_DATE DESC
</select>

<!-- 이미지조회 -->

<resultMap type="Model.DTO.YYYDTO.GoodsImg" id="goodsImg">
   <id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/> 
   <result column="COMPANY_NUM" jdbcType="VARCHAR" property="companyNum"/>
   <result column="MAP_L_NUM" jdbcType="VARCHAR" property="mapLNum"/>
   <result column="MAP_M_NUM" jdbcType="VARCHAR" property="mapMNum"/>
   <result column="MAP_S_NUM" jdbcType="VARCHAR" property="mapSNum"/>
   <result column="THEME_L_NUM" jdbcType="VARCHAR" property="themeLNum"/>
   <result column="THEME_M_NUM" jdbcType="VARCHAR" property="themeMNum"/>
   <result column="THEME_S_NUM" jdbcType="VARCHAR" property="themeSNum"/>
   <result column="GOODS_IMG_NAME" jdbcType="VARCHAR" property="goodsImgName"/>
   <result column="GOODS_IMG_NUM" jdbcType="VARCHAR" property="goodsImgNum"/>
   <result column="GOODS_IMG_KIND" jdbcType="VARCHAR" property="goodsImgKind"/>
</resultMap>

<select id="getImages" parameterType="Model.DTO.YYYDTO.GoodsImg" resultMap="goodsImg">
      SELECT GOODS_NUM, COMPANY_NUM, GOODS_IMG_NAME, GOODS_IMG_NUM, GOODS_IMG_KIND
      FROM GOODS_IMG
      WHERE GOODS_NUM = #{goodsNum}
</select>

<!-- 상세보기 -->
<select id="getGoodsDetail" parameterType="Model.DTO.YYYDTO.Goods" resultMap="goods">
		SELECT
	  		<include refid="goodsAllSelect" />
		FROM GOODS
		WHERE GOODS_NUM = #{goodsNum}
		
</select>

<!-- 지역,테마도미노 각 이름 가져오기 -->

<resultMap type="Model.DTO.YYYDTO.MapTheme" id="maptheme">
   <id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>   
   <result column="COMPANY_NUM" jdbcType="VARCHAR" property="companyNum"/>
   <result column="MAP_L_NUM" jdbcType="VARCHAR" property="mapLNum"/>
   <result column="MAP_L_NAME" jdbcType="VARCHAR" property="mapLName"/>
   <result column="MAP_M_NUM" jdbcType="VARCHAR" property="mapMNum"/>
   <result column="MAP_M_NAME" jdbcType="VARCHAR" property="mapMName"/>
   <result column="MAP_S_NUM" jdbcType="VARCHAR" property="mapSNum"/>
   <result column="MAP_S_NAME" jdbcType="VARCHAR" property="mapSName"/>
   <result column="THEME_L_NUM" jdbcType="VARCHAR" property="themeLNum"/>
   <result column="THEME_L_NAME" jdbcType="VARCHAR" property="themeLName"/>
   <result column="THEME_M_NUM" jdbcType="VARCHAR" property="themeMNum"/>
   <result column="THEME_M_NAME" jdbcType="VARCHAR" property="themeMName"/>
   <result column="THEME_S_NUM" jdbcType="VARCHAR" property="themeSNum"/>
   <result column="THEME_S_NAME" jdbcType="VARCHAR" property="themeSName"/>
</resultMap>

<select id="getDominoDetail" parameterType="String" resultMap="maptheme">
	SELECT ML.MAP_L_NAME, MM.MAP_M_NAME,MS.MAP_S_NAME, TL.THEME_L_NAME, TM.THEME_M_NAME , TS.THEME_S_NAME
	FROM GOODS G , MAPLARGE ML , MAPMEDIUM MM , MAPSMALL MS , THEMELARGE TL , THEMEMEDIUM TM , THEMESMALL TS
	WHERE G.MAP_L_NUM = ML.MAP_L_NUM AND G.MAP_M_NUM = MM.MAP_M_NUM AND G.MAP_S_NUM = MS.MAP_S_NUM
				AND G.THEME_L_NUM = TL.THEME_L_NUM AND G.THEME_M_NUM = TM.THEME_M_NUM AND G.THEME_S_NUM = TS.THEME_S_NUM
				AND G.GOODS_NUM = #{goodsNum};		
</select>



<!-- 지역 도미노 -->


<resultMap type="Model.DTO.YYYDTO.MapLarge" id="mapLarge">
   <id column="MAP_L_NUM" jdbcType="VARCHAR" property="mapLNum" />
   <result column="MAP_L_NAME" jdbcType="VARCHAR" property="mapLName"/>   
</resultMap>
   
<select id="selectMapLarge" resultMap="mapLarge">
   SELECT MAP_L_NUM, MAP_L_NAME
   FROM MapLarge

</select>

<resultMap type="Model.DTO.YYYDTO.MapMedium" id="mapMedium">
   <id column="MAP_M_NUM" jdbcType="VARCHAR" property="mapMNum" />
   <id column="MAP_L_NUM" jdbcType="VARCHAR" property="mapLNum" />
   <result column="MAP_M_NAME" jdbcType="VARCHAR" property="mapMName"/>   
</resultMap>

<select id="selectMapMedium" parameterType="MapLarge" resultMap="mapMedium">
	SELECT MAP_L_NUM, MAP_M_NUM, MAP_M_NAME
	FROM MAPMEDIUM
	WHERE MAP_L_NUM = #{mapLNum}

</select>

<resultMap type="Model.DTO.YYYDTO.MapSmall" id="mapSmall">
	<id column="MAP_S_NUM" jdbcType="VARCHAR" property="mapSNum" />
	<id column="MAP_M_NUM" jdbcType="VARCHAR" property="mapMNum" />
    <id column="MAP_L_NUM" jdbcType="VARCHAR" property="mapLNum" />
    <result column="MAP_S_NAME" jdbcType="VARCHAR" property="mapSName"/>   
</resultMap>

<select id="selectMapSmall" parameterType="MapMedium" resultMap="mapSmall">
	SELECT MAP_L_NUM, MAP_M_NUM, MAP_S_NUM, MAP_S_NAME
	FROM MAPSMALL
	WHERE MAP_L_NUM = #{mapLNum} and MAP_M_NUM = #{mapMNum}

</select>

<!-- 테마 도미노 -->

<resultMap type="Model.DTO.YYYDTO.ThemeLarge" id="themeLarge">
   <id column="THEME_L_NUM" jdbcType="VARCHAR" property="themeLNum" />
   <result column="THEME_L_NAME" jdbcType="VARCHAR" property="themeLName"/>   
</resultMap>
   
<select id="selectThemeLarge" resultMap="themeLarge">
   SELECT THEME_L_NUM, THEME_L_NAME
   FROM THEMELARGE
</select>

<resultMap type="Model.DTO.YYYDTO.ThemeMedium" id="themeMedium">
   <id column="THEME_M_NUM" jdbcType="VARCHAR" property="themeMNum" />
   <id column="THEME_L_NUM" jdbcType="VARCHAR" property="themeLNum" />
   <result column="THEME_M_NAME" jdbcType="VARCHAR" property="themeMName"/>
</resultMap>

<select id="selectThemeMedium" parameterType="Model.DTO.YYYDTO.ThemeLarge" resultMap="themeMedium">
	SELECT THEME_L_NUM, THEME_M_NUM, THEME_M_NAME
	FROM THEMEMEDIUM
	WHERE THEME_L_NUM = #{themeLNum}
</select>

<resultMap type="Model.DTO.YYYDTO.ThemeSmall" id="themeSmall">
	<id column="THEME_S_NUM" jdbcType="VARCHAR" property="themeSNum" />
   <id column="THEME_M_NUM" jdbcType="VARCHAR" property="themeMNum" />
   <id column="THEME_L_NUM" jdbcType="VARCHAR" property="themeLNum" />
   <result column="THEME_S_NAME" jdbcType="VARCHAR" property="themeSName"/>
</resultMap>

<select id="selectThemeSmall" parameterType="Model.DTO.YYYDTO.ThemeMedium" resultMap="themeSmall">
	SELECT THEME_L_NUM, THEME_M_NUM, THEME_S_NUM, THEME_S_NAME
	FROM THEMESMALL
	WHERE THEME_M_NUM = #{themeMNum} and THEME_L_NUM = #{themeLNum}
</select>


<!-- 기업회원 정보 조회 -->

<resultMap type="Model.DTO.YYYDTO.Company" id="company">
		<id column="COMPANY_NUM" jdbcType="VARCHAR" property="companyNum" />
		<result column="COMPANY_KIND" jdbcType="VARCHAR" property="companyKind" />
		<result column="COMPANY_ID" jdbcType="VARCHAR" property="companyId" />
		<result column="COMPANY_PW" jdbcType="VARCHAR" property="companyPw" />
		<result column="COMPANY_BN" jdbcType="VARCHAR" property="companyBn" />
		<result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName" />
		<result column="COMPANY_CAP" jdbcType="VARCHAR" property="companyCap" />
		<result column="COMPANY_PH" jdbcType="BIGINT" property="companyPh" />
		<result column="COMPANY_EMAIL" jdbcType="VARCHAR" property="companyEmail" />
		<result column="MANAGER_NAME" jdbcType="VARCHAR" property="managerName" />
		<result column="COMPANY_ADDR" jdbcType="VARCHAR" property="companyAddr" />
		<result column="COMPANY_BANK" jdbcType="VARCHAR" property="companyBank" />
		<result column="COMPANY_ACC" jdbcType="VARCHAR"	property="companyAcc" />
		<result column="COMPANY_STATUS" jdbcType="VARCHAR" property="companyStatus" />
</resultMap>

<sql id="basecolumnCompany">
		COMPANY_NUM, COMPANY_KIND, COMPANY_ID, COMPANY_PW,
		COMPANY_BN, COMPANY_NAME, COMPANY_CAP, COMPANY_PH, COMPANY_EMAIL,
		MANAGER_NAME, COMPANY_ADDR, COMPANY_BANK, COMPANY_ACC, COMPANY_STATUS
</sql>

<select id="getReadyOk" resultMap="company">
	  	SELECT
	  		<include refid="basecolumnCompany" />
		FROM COMPANY
		WHERE COMPANY_STATUS COMPANY_STATUS = '미승인'

</select>

<select id="getCompanyInfo" parameterType ="Model.DTO.YYYDTO.Company" resultMap="company">
	  	SELECT COMPANY_NUM, COMPANY_NAME, COMPANY_KIND, COMPANY_STATUS	  		
		FROM COMPANY
		WHERE COMPANY_NUM = #{companyNum}

</select>




<!-- 등록 승인_관리자페이지 -->


<update id="upGoodsStatus" parameterType="String" >
	UPDATE GOODS 
	SET GOODS_STATUS ='승인완료'
	WHERE GOODS_NUM = #{goodsNum}
</update>

<update id="upGoodsStatusX" parameterType="String" >
	UPDATE GOODS 
	SET GOODS_STATUS ='승인거부'
	WHERE GOODS_NUM = #{goodsNum}
</update>



<!-- 상품 삭제 -->
<delete id="deleteGoods" parameterType="String">
	DELETE FROM GOODS
	WHERE GOODS_NUM = #{goodsNum}
</delete>

<delete id="deleteGoodsImg" parameterType="String">
	DELETE FROM GOODS_IMG
	WHERE GOODS_NUM = #{goodsNum}
</delete>



</mapper>